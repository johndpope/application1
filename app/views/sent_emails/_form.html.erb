<div class="modal modal-wide fade" id="<%= dom_id(sent_email, 'modal') %>" style="z-index: 9999 !important">
  <div class="modal-dialog">
    <div class="modal-content">
      <%= form_for sent_email, url: {controller: 'sent_emails',  action: (sent_email.new_record? ? 'create' : 'update')}, data: {remote: true}, :multipart => true do |f| %>
        <div class="modal-header">
          <button class="close" data-dismiss="modal" type="button">
            <span>Ã—</span>
          </button>
          <% if sent_email.new_record? %>
            <h4>New email</h4>
          <% else %>
            <h4>Sent email #<%= sent_email.id%></h4>
          <% end %>
        </div>
        <div class="modal-body" style="padding-bottom: 35px">
          <%= f.hidden_field :id %>
          <%= f.hidden_field :resource_id %>
          <%= f.hidden_field :resource_type %>
          <%= f.hidden_field :sender %>
          <div class="form-group tag_list_block <%= 'has-error' if sent_email.errors[:receiver].present? %>" data-content="<%= sent_email.errors[:receiver].try(:join, ',') %>">
            <%= f.label :receiver, "Receiver(s)", class: 'control-label' %>
            <%= f.text_field :receiver,  class: 'form-control', placeholder: 'Add receiver', maxlength: 256 %>
          </div>
          <div class="form-group <%= 'has-error' if sent_email.errors[:subject].present? %>" data-content="<%= sent_email.errors[:subject].try(:join, ',') %>">
            <%= f.label :subject, class: 'control-label' %>
            <%= f.text_field :subject,  class: 'form-control', placeholder: 'Subject', maxlength: 256 %>
          </div>
          <div class="form-group <%= 'has-error' if sent_email.errors[:body].present? %>" data-content="<%= sent_email.errors[:body].try(:join, ',') %>">
            <%= f.label :body, class: 'control-label' %>
            <%= f.text_area :body, class: "wysihtml5 textarea wysihtml5-editor form-control", rows: 20 %>
          </div>

          <% unless sent_email.new_record? %>
            <div class="form-group">
              <%= f.label :updated_at, class: 'control-label' %>
              <p><%= local_time(sent_email.updated_at, format: '%m/%d/%y %I:%M %p', title: sent_email.updated_at.try(:in_time_zone, 'Eastern Time (US & Canada)').try(:strftime, '%m/%d/%y %I:%M %p - Eastern Time (US & Canada)')) %> by <b><%= sent_email.versions.last.try(:whodunnit)%></b></p>
            </div>
            <div class="form-group">
              <%= f.label :created_at, class: 'control-label' %>
              <p><%= local_time(sent_email.created_at, format: '%m/%d/%y %I:%M %p', title: sent_email.created_at.try(:in_time_zone, 'Eastern Time (US & Canada)').try(:strftime, '%m/%d/%y %I:%M %p - Eastern Time (US & Canada)')) %> by <b><%= sent_email.versions.first.try(:whodunnit)%></b></p>
            </div>
          <% end %>
        </div>
        <div class="modal-footer">
          <button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>
          <%= f.submit (sent_email.new_record? ? t(:send) : t(:update)), class: 'btn btn-primary', data: {disable_with: (sent_email.new_record? ? t(:sending) : t(:updating)) } %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function(){

    $('.wysihtml5').each(function(i, elem) {
      $(elem).wysihtml5({
        toolbar: {
          'font-styles': true,
          'color': false,
          'emphasis': {
            'small': true
          },
          'blockquote': true,
          'lists': true,
          'html': false,
          'link': false,
          'image': false,
          'smallmodals': false
        }
      });
    });
    var colors = ["primary"];

    function colorTags(){
      var tags = $('div#tag_list_block .tag');
      for(var i = 0; i < tags.length; i++){
        tags[i].className = "tag label label-tags label-" + colors[i % (colors.length)];
      }
    }
    $('#sent_email_receiver').tagsinput({tagClass: 'label label-primary'});
    colorTags();

    // $('#sent_email_receiver').select2({
  	// 	multiple: true,
  	// 	data: [],
  	// 	width: '100%',
  	// 	createSearchChoice: function (term, data) { return { id: term, text: term }; },
  	// 	initSelection: function (element, callback) {
  	// 		var values = $.map($(element).val().split(/\s*,\s*/), function (v) {
  	// 			return { id: v, text: v };
  	// 		});
  	// 		callback(values);
  	// 	}
  	// });

  })
</script>
